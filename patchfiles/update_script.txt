#!/bin/bash
#
# version=28JAN24

MAMECONFIG=$1
HARDWAREMODE_CURRENT=$2
TEMPLATEFILE=$3
RPI2JAMMA=$4
CONNECTION_TIMEOUT=30
UPDATED="N"
NOCHANGES="N"
FILTERFILE=$( cat "/tmp/pinhp_variables" | grep "FILTERFILE=" | awk -F'"' '{print $2}')
clone_joysticks=$( cat "/tmp/pinhp_variables" | grep "clone_joysticks=" | awk -F'"' '{print $2}')
clone_buttons=$( cat "/tmp/pinhp_variables" | grep "clone_buttons=" | awk -F'"' '{print $2}')

joy2key_start ()
{
  case $1 in
    anykey )
      joy2key -config anykey &> /dev/null &
    ;;
    enterkey )
      joy2key -config enterkey &> /dev/null &
    ;;
    yesno )
      joy2key -config yesno &> /dev/null &
    ;;
    noaxis )
      joy2key -config noaxis &> /dev/null &
    ;;
    escape )
      joy2key -config escape &> /dev/null &
    ;;
    updown )
      joy2key -config updown &> /dev/null &
    ;;
    updowntabenter )
      joy2key -config updowntabenter &> /dev/null &
    ;;
    spacequit )
      joy2key -config spacequit &> /dev/null &
    ;;
  esac
}

joy2key_stop ()
{
  pkill joy2key &> /dev/null
}

ADVMAME_RC_PI2JAMMA=$(grep "advmame_rc_pi2jamma" "/tmp/patch_server.txt" | awk -F 'advmame_rc_pi2jamma=' '{print $2}' )
ADVMAME_RC_PI2SCART=$(grep "advmame_rc_pi2scart" "/tmp/patch_server.txt" | awk -F 'advmame_rc_pi2scart=' '{print $2}' )
TEMPLATE_UPDATE=$(grep "templatefile" "/tmp/patch_server.txt" | awk -F 'templatefile=' '{print $2}' )
DATABASE_UPDATE=$(grep "filterfile" "/tmp/patch_server.txt" | awk -F 'filterfile=' '{print $2}' )
PINHP_TIMINGS_SCRIPT=$(grep "pinhp_timings_script" "/tmp/patch_server.txt" | awk -F 'pinhp_timings_script=' '{print $2}' )
PINHP_TIMINGS_JAMMA=$(grep "pinhp_timings_jamma" "/tmp/patch_server.txt" | awk -F 'pinhp_timings_jamma=' '{print $2}' )
PINHP_TIMINGS_SCART=$(grep "pinhp_timings_scart" "/tmp/patch_server.txt" | awk -F 'pinhp_timings_scart=' '{print $2}' )

if grep -q "^# mameconfig=." $MAMECONFIG; then
  MAME_INSERT_AFTER="^# mameconfig=."
else
  MAME_INSERT_AFTER="DO NOT EDIT THIS LINE"
fi     

case $HARDWAREMODE_CURRENT in
  Jamma )
    ADVMAME_RC_UPDATE="$ADVMAME_RC_PI2JAMMA"
    PINHP_TIMINGS="$PINHP_TIMINGS_JAMMA"
  ;;
  SCART )
    ADVMAME_RC_UPDATE="$ADVMAME_RC_PI2SCART"
    PINHP_TIMINGS="$PINHP_TIMINGS_SCART"
  ;;
esac

# Download default advmame.rc file
if ! [ -e /tmp/advmame_rc_update ]; then
  curl --connect-timeout $CONNECTION_TIMEOUT -k -L -o /tmp/advmame_rc_update "$ADVMAME_RC_UPDATE"
  response=$?
  if [ "$response" = "28" ] || [ ! -e "/tmp/advmame_rc_update" ]; then
    joy2key_start "anykey"
    if [ "$response" = "28" ]; then
      dialog --timeout 15 --title "pinHP Arcade Classics" --msgbox "\n*** TIMEOUT ERROR ***\n\nCheck connection\n\n" 0 0
    else
      dialog --timeout 15 --title "pinHP Arcade Classics" --msgbox "\n*** ERROR ***\n\nFile not found:\nadvmame.rc\n\n" 0 0
    fi
    joy2key_stop
  fi
fi

### Mandatory update ###

# Pi2SCART
if [ "$HARDWAREMODE_CURRENT" = "SCART" ]; then
  modeline_error='device_video_modeline "1920x240 (57.00 Hz)"   40.74   1920 2048 2295 2599   240 243 250 275  -hsync -vsync # 15.68 kHz'
  modeline_correct='device_video_modeline "1920x240 (57.00 Hz)"   40.74   1920 2058 2305 2599   240 251 258 275  -hsync -vsync # 15.68 kHz'
  sed -i 's/'"$modeline_error"'/'"$modeline_correct"'/g' $MAMECONFIG
  modeline_error='device_video_modeline "1920x240 (57.50 Hz)"   40.20   1920 3048 2295 2599   240 243 243 269  -hsync -vsync # 15.47 kHz'
  modeline_correct='device_video_modeline "1920x240 (57.50 Hz)"   40.20   1920 2058 2305 2599   240 251 252 269  -hsync -vsync # 15.47 kHz'
  sed -i 's/'"$modeline_error"'/'"$modeline_correct"'/g' $MAMECONFIG
fi

### Complete timings replacement 
clear

if [ -e /tmp/advmame_rc_update ]; then
  pinhp_timings_version=$( grep "pinhp_timings_version=" /tmp/advmame_rc_update | awk -F '=' '{print $2}' )
  current_timings_version=$( grep "pinhp_timings_version=" $MAMECONFIG | awk -F '=' '{print $2}' )
  if [ -z "$current_timings_version" ]; then
    current_timings_version="n/a"
  fi
  if [ "$current_timings_version" != "$pinhp_timings_version" ]; then
  
    # Download update script, do not download again within 10 minutes
    if [ ! -e /tmp/pinhp_timings_script_last ]; then
      echo $SECONDS > /tmp/pinhp_timings_script_last
    fi
    pinhp_timings_script_last=$( cat /tmp/pinhp_timings_script_last )
    time_passed=$(( SECONDS - pinhp_timings_script_last ))
    if ! [ -e /tmp/pinhp_timings_script.sh ] || [ $time_passed -gt 600 ]; then
      curl --connect-timeout $CONNECTION_TIMEOUT -k -L -o /tmp/pinhp_timings_script.sh "$PINHP_TIMINGS_SCRIPT"
      response=$?
      if [ "$response" = "28" ] || [ ! -e "/tmp/pinhp_timings_script.sh" ]; then
        joy2key_start "anykey"
        if [ "$response" = "28" ]; then
          dialog --timeout 15 --begin 10 7 --title "pinHP Arcade Classics" --msgbox "\n*** TIMEOUT ERROR ***\n\nCheck connection" 9 26
        else
          dialog --timeout 15 --begin 10 9 --title "pinHP Arcade Classics" --msgbox "\n*** ERROR ***\n\nFile not found" 9 22
        fi
        joy2key_stop
      else
        echo $SECONDS > /tmp/pinhp_timings_script_last
      fi
    fi
    
    # File exists already or has been just downloaded
    if [ -e /tmp/pinhp_timings_script.sh ]; then
      # Run update script
      bash /tmp/pinhp_timings_script.sh "$MAMECONFIG" "$HARDWAREMODE_CURRENT" "$TEMPLATEFILE" "$RPI2JAMMA"
    fi
  
  fi
fi

### Modelines update
if [ -e /tmp/advmame_rc_update ]; then

  touch /tmp/timings_current_names
  touch /tmp/timings_official
  touch /tmp/timings_missing
  cat $MAMECONFIG | grep device_video_modeline | awk -F"\"" '{print $2}' > /tmp/timings_current_names
  cat /tmp/advmame_rc_update | grep -v "^#" | grep device_video_modeline > /tmp/timings_official
  
  awk -v INPUTFILE="/tmp/timings_official" -v COMPAREFILE="/tmp/timings_current_names" -v OUTFILE="/tmp/timings_missing" -f "/root/scripts/missing_timings.awk"
  
  if grep -q "device_video_modeline" /tmp/timings_missing; then
  
    # Write missing timings into array
    cat /tmp/timings_missing | awk -F"\"" '{print $2}' > /tmp/timings_missing_names
    declare -a dialog_array
    i=1 # Array index
    j=1 # Visible menu item number to be displayed in menu list
    while read line
    do     
      dialog_array[ $i ]=$j
      (( j++ ))
      dialog_array[ ($i + 1) ]=$line
      (( i=($i+2) ))
    done < /tmp/timings_missing_names
    
    joy2key_start "yesno"
    dummy=`dialog --timeout 30 --title "pinHP Arcade Classics" --menu "\nNew video modes" 0 0 0 "${dialog_array[@]}" 3>&1 1>&2 2>&3`
    if [ ! -z $dummy ]; then
      count_missing=$( cat /tmp/timings_missing | wc -l )
      dialog --timeout 15 --title "pinHP Arcade Classics" --defaultno --yesno "\nAdd $count_missing new modelines\nto current advmame.rc\nconfiguration file?\n\n" 0 0
      response=$?
      if [ "$response" = "0" ]; then
        rm /tmp/timings_insert_code &> /dev/null
        touch /tmp/timings_insert_code
        echo -e "\n# Added by online update" > /tmp/timings_insert_code
        cat /tmp/timings_missing >> /tmp/timings_insert_code
        echo "#" >> /tmp/timings_insert_code
        sed -i -e '/device_video_clock/r /tmp/timings_insert_code' $MAMECONFIG
  
        # Check if all lines were addded
        copycount=0
        while read line
        do
          if grep -q "$Line" "$MAMECONFIG"; then
            ((copycount++))
          fi
        done < /tmp/timings_missing
  
        if [ $count_missing -eq $copycount ]; then
          dialog --timeout 3 --title "pinHP Arcade Classics" --msgbox "\nSuccess!\n\n$copycount lines added\n\n" 0 0
          UPDATED="Y"
          # Save new 1536x256 (55.00 Hz) modeline for R-Type games
          if grep -q "1536x256 (55.00 Hz)" "/tmp/timings_missing"; then 
            dialog --timeout 15 --title "pinHP Arcade Classics" --yesno "\nModeline 1536x256 (55.00 Hz):\n\nApply new optimized modeline\nto R-Type games?\n\n" 0 0
            response=$?
            if [ "$response" = "0" ]; then
              rtype_new='256x384x55/display_mode 1536x256 (55.00 Hz)'
              sed -i 's:256x384x55/display_mode.*:'"$rtype_new"':g' $MAMECONFIG
              rtype_new='384x256x55/display_mode 1536x256 (55.00 Hz)'
              sed -i 's:384x256x55/display_mode.*:'"$rtype_new"':g' $MAMECONFIG
              clear
              dialog --timeout 15 --title "pinHP Arcade Classics" --msgbox "\n1536x256 (55.00 Hz):\n\nDone!\n\n" 0 0
            else
              dialog --timeout 15 --title "pinHP Arcade Classics" --msgbox "\n1536x256 (55.00 Hz):\n\nNo changes applied.\n\n" 0 0
            fi
          fi
          # Save new 1600x224 (59.00 Hz) modeline for e.g. Bubble Bobble
          if grep -q "1600x224 (59.00 Hz)" "/tmp/timings_missing"; then 
            dialog --timeout 15 --title "pinHP Arcade Classics" --yesno "\nModeline 1600x224 (59.00 Hz):\n\nApply new optimized modeline\nto games (e.g. Bubble Bobble)?\n\n" 0 0
            response=$?
            if [ "$response" = "0" ]; then
              bublbobl_new='/display_mode 1600x224 (59.00 Hz)'
              sed -i 's:/display_mode 1520x224 (59.18 Hz):'"$bublbobl_new"':g' $MAMECONFIG
              clear
              dialog --timeout 15 --title "pinHP Arcade Classics" --msgbox "\n1600x224 (59.00 Hz):\n\nDone!\n\n" 0 0
            else
              dialog --timeout 15 --title "pinHP Arcade Classics" --msgbox "\n1600x224 (59.00 Hz):\n\nNo changes applied.\n\n" 0 0
            fi
          fi
        else
          dialog --timeout 15 --title "pinHP Arcade Classics" --msgbox "\n*** ERROR ***\n\n$copycount/$count_missing lines added\n\n" 0 0
        fi
      else
        NOCHANGES="Y"
      fi
    fi
  joy2key_stop
  fi
rm /tmp/timings_current_names &> /dev/null
rm /tmp/timings_official &> /dev/null
rm /tmp/timings_missing &> /dev/null
rm /tmp/timings_missing_names &> /dev/null
rm /tmp/timings_insert_code &> /dev/null
fi
  
### Update savestate input map
missing_code=""
missing_info=""
rm /tmp/missing_code &> /dev/null

if ! grep -q "input_map\[ui_save_state\]" $MAMECONFIG; then
  missing_info="input_map[ui_save_state]"
  grep "input_map\[ui_save_state\]" /tmp/advmame_rc_update >> /tmp/missing_code
fi
if ! grep -q "input_map\[ui_load_state\]" $MAMECONFIG; then
  missing_info="${missing_info}\ninput_map[ui_load_state]"
  grep "input_map\[ui_load_state\]" /tmp/advmame_rc_update >> /tmp/missing_code
fi

if [ ! -z "$missing_info" ]; then
  joy2key_start "yesno"
  dialog --timeout 15 --title "pinHP Arcade Classics" --defaultno --yesno "\nAdd game savestate keys?\n\n$missing_info\n\n" 0 0
  response=$?
  if [ "$response" = "0" ]; then
    rm /tmp/insert_code &> /dev/null
    touch /tmp/insert_code
    echo -e "\n# Added by online update" > /tmp/insert_code
    cat /tmp/missing_code >> /tmp/insert_code
    echo "#" >> /tmp/insert_code
    if grep -q "^# mameconfig=." $MAMECONFIG; then
      sed -i -e '/^# mameconfig=./r /tmp/insert_code' $MAMECONFIG
    else
      sed -i -e '/DO NOT EDIT THIS LINE/r /tmp/insert_code' $MAMECONFIG
    fi            
    UPDATED="Y"
    dialog --timeout 3 --title "pinHP Arcade Classics" --msgbox "\nGame savestate keys\n\nDone!\n\n" 0 0
  else
    NOCHANGES="Y"
  fi
joy2key_stop
fi
 
### Insert missing P2 Button 5/6 definitions
missing_code=""
missing_info=""
rm /tmp/missing_code &> /dev/null

if ! grep -q "input_map\[p2_button5\]" $MAMECONFIG || ! grep -q "input_map\[p2_button6\]" $MAMECONFIG; then
  joy2key_start "yesno"
  dialog --timeout 15 --title "pinHP Arcade Classics" --defaultno --yesno "\nAdd missing player 2\n\nbuttons 5/6 definitions?\n\n" 0 0
  response=$?
  if [ "$response" = "0" ]; then
    rm /tmp/insert_code &> /dev/null
    touch /tmp/insert_code
    echo -e "\n# Added by online update" > /tmp/insert_code
    echo "#" >> /tmp/insert_code
    if ! grep -q "input_map\[p2_button5\]" $MAMECONFIG; then
      echo "input_map[p2_button5] keyboard[0,k]" >> /tmp/insert_code
    fi
    if ! grep -q "input_map\[p2_button6\]" $MAMECONFIG; then
      echo "input_map[p2_button6] keyboard[0,i]" >> /tmp/insert_code
    fi
    echo "#" >> /tmp/insert_code
    sed -i -e '/'"$MAME_INSERT_AFTER"'/r /tmp/insert_code' $MAMECONFIG
    UPDATED="Y"
    dialog --timeout 3 --title "pinHP Arcade Classics" --msgbox "\nPlayer 2 buttons 5/6\n\nDone!\n\n" 0 0
  else
    NOCHANGES="Y"
  fi
joy2key_stop
fi

### Update mouse/spinner support
missing_code=""
missing_info=""
rm /tmp/missing_code &> /dev/null

if ! grep -q "device.*mouse" $MAMECONFIG && ! grep -q "input_map.*mouse" $MAMECONFIG; then
  joy2key_start "yesno"
  dialog --timeout 15 --title "pinHP Arcade Classics" --defaultno --yesno "\nAdd mouse/spinner support?\n\n" 0 0
  response=$?
  if [ "$response" = "0" ]; then
    rm /tmp/insert_code &> /dev/null
    touch /tmp/insert_code
    grep "device.*mouse" /tmp/advmame_rc_update >> /tmp/missing_code
    grep "input_map.*mouse" /tmp/advmame_rc_update >> /tmp/missing_code
    echo -e "\n# Added by online update" > /tmp/insert_code
    cat /tmp/missing_code >> /tmp/insert_code
    echo "#" >> /tmp/insert_code
    if grep -q "^# mameconfig=." $MAMECONFIG; then
      sed -i -e '/^# mameconfig=./r /tmp/insert_code' $MAMECONFIG
    else
      sed -i -e '/DO NOT EDIT THIS LINE/r /tmp/insert_code' $MAMECONFIG
    fi            
    UPDATED="Y"
    dialog --timeout 3 --title "pinHP Arcade Classics" --msgbox "\nMouse/spinner support\n\nDone!\n\n" 0 0
  else
    NOCHANGES="Y"
  fi
joy2key_stop
fi

### Update display_artwork_crop change to yes
if grep -q "^display_artwork_crop no" $MAMECONFIG; then
  joy2key_start "yesno"
  dialog --timeout 30 --title "pinHP Arcade Classics" --defaultno --yesno "\nMAME setting, enabling artwork\nbackdrop to be displayed at\ncorrect game size\n\nCurrent setting:\n\n  'display_artwork_crop no'\n\nRecommended setting:\n\n  'display_artwork_crop yes'\n\nSet to 'yes'?\n\n" 0 0
  response=$?
  if [ "$response" = "0" ]; then
    sed -i 's/^display_artwork_crop no.*/display_artwork_crop yes/' $MAMECONFIG
    UPDATED="Y"
    dialog --timeout 3 --title "pinHP Arcade Classics" --msgbox "\nArtwork backdrop\n\nDone!\n\n" 0 0
  else
    NOCHANGES="Y"
  fi
joy2key_stop
fi

### Update _games.template
UPDATE_VERSION="20OCT21"

current_template_version=$( grep "version=" $TEMPLATEFILE | awk -F 'version=' '{print $2}' | grep -o "[0-9,A-Z,a-z]*" )
if [ -z "$current_template_version" ]; then
  current_template_version="unknown"
fi

if [ "$current_template_version" != "$UPDATE_VERSION" ]; then
  joy2key_start "yesno"
  dialog --timeout 30 --title "pinHP Arcade Classics" --defaultno --yesno "\nGame definition file\n'_games.template'\n\nCurrent version: $current_template_version\nUpdate version:  $UPDATE_VERSION\n\nFavourites and existing 'joy'\nparameter entries in this\nfile will be automatically\nbacked up and restored.\n\nDo you want to update?\n\n" 0 0
  response=$?
  if [ "$response" = "0" ]; then
    # Download _games.template
    clear
    if ! [ -e /tmp/template_update ]; then
      curl --connect-timeout $CONNECTION_TIMEOUT -k -L -o /tmp/template_update "$TEMPLATE_UPDATE"
      response=$?
      if [ "$response" = "28" ] || [ ! -e "/tmp/template_update" ]; then
        if [ "$response" = "28" ]; then
          dialog --timeout 15 --title "pinHP Arcade Classics" --msgbox "\n*** TIMEOUT ERROR ***\n\nCheck connection\n\n" 0 0
        else
          dialog --timeout 15 --title "pinHP Arcade Classics" --msgbox "\n*** ERROR ***\n\nFile not found:\n_games.template\n\n" 0 0
        fi
      fi
    fi
    if [ -e /tmp/template_update ]; then
  
      clear
      favcount=$( grep -E "(1ONE|1TWO|1TRE|0ALL|1FAV)" $TEMPLATEFILE | grep -v "_DUMMY" | wc -l )
      mkdir -p /tmp/backup  
      cp $TEMPLATEFILE /tmp/backup/
      
      # Remove mario and pacman from default favourites
      sed -i 's/-0ONE-0TWO-0TRE-1ALL-1FAV/-0ONE-0TWO-0TRE-1ALL-0FAV/' /tmp/template_update

      # Update new template with joy params from backup
      rm /tmp/template_update_joy &> /dev/null
      touch /tmp/template_update_joy
      cat $TEMPLATEFILE | grep "joy \?=" > /tmp/template_backup_joy
      sed -i 's/^ *//g' /tmp/template_backup_joy
      awk -v BACKUPFILE="/tmp/template_backup_joy" -v TEMPLATEFILE="/tmp/template_update" -v OUTFILE="/tmp/template_update_joy" -f "/root/scripts/joy_restore.awk"
      cp /tmp/template_update_joy $TEMPLATEFILE

      # Restore favourites
      FAVGAMES="/tmp/favgames.template"
      if [ -e "/tmp/backup/_games.template" ]; then
        grep -E "(1ONE|1TWO|1TRE|0ALL|1FAV)" "/tmp/backup/_games.template" | grep -v "_DUMMY" > "$FAVGAMES"
        favlines=$(cat "$FAVGAMES" | wc -l)
      fi
  
      if [ -e "$FAVGAMES" ] && [ "$favlines" -ne 0 ]; then
        default_params="-0ONE-0TWO-0TRE-1ALL-0FAV"
        cat $TEMPLATEFILE | grep -v \"_DUMMY\" | sed -i "s/params =\".*FAV\"/params =\"$default_params\"/g"
        dialog --title "pinHP Arcade Classics" --gauge "\n Restoring: $current_rom\n\n 0 / $favlines " 10 26 < <(
  
        i=0
        while read favline
        do
        # Calculate progress
        percent=$(( 100*(++i)/favlines ))

cat <<EOF
XXX
$percent
\n Restoring: $current_rom\n\n $i / $favlines
XXX
EOF
  
        current_rom=$( echo "$favline" | awk -F'"' '{print $2}' )
        backup_params=$( cat "$FAVGAMES" | grep "rom =\"$current_rom\"" | awk -F'"' '{print $6}' )
        sed -i "/rom =\"$current_rom\"/s/params =\".*FAV\"/params =\"$backup_params\"/" $TEMPLATEFILE 
        done < $FAVGAMES
  
        )
        setterm -cursor off
        sleep 1
      fi
      rm $FAVGAMES &> /dev/null
      rm /tmp/template_update_joy &> /dev/null
  
    fi
    UPDATED="Y"
    dialog --timeout 3 --title "pinHP Arcade Classics" --msgbox "\n_games.template\n\nDone!\n\n" 0 0
  else
    NOCHANGES="Y"
  fi
joy2key_stop
fi

### Update _database.csv
UPDATE_VERSION="20230310"

current_database_version=$( grep "version=" $FILTERFILE | awk -F 'version=' '{print $2}' | grep -o "[0-9,A-Z,a-z]*" )
if [ -z "$current_template_version" ]; then
  current_database_version="unknown"
fi

if [ "$current_database_version" != "$UPDATE_VERSION" ]; then
  joy2key_start "yesno"
  dialog --timeout 30 --title "pinHP Arcade Classics" --defaultno --yesno "\nGame filter file\n'_database.csv'\n\nCurrent version: $current_database_version\nUpdate version:  $UPDATE_VERSION\n\nDo you want to update and\noverwrite existing version?\n\n" 0 0
  response=$?
  if [ "$response" = "0" ]; then
    # Download _database.csv
    clear
    if ! [ -e /tmp/database_update ]; then
      curl --connect-timeout $CONNECTION_TIMEOUT -k -L -o /tmp/database_update "$DATABASE_UPDATE"
      response=$?
      if [ "$response" = "28" ] || [ ! -e "/tmp/database_update" ]; then
        if [ "$response" = "28" ]; then
          dialog --timeout 15 --title "pinHP Arcade Classics" --msgbox "\n*** TIMEOUT ERROR ***\n\nCheck connection\n\n" 0 0
        else
          dialog --timeout 15 --title "pinHP Arcade Classics" --msgbox "\n*** ERROR ***\n\nFile not found:\n_database.csv\n\n" 0 0
        fi
      fi
    fi
    if [ -e /tmp/database_update ]; then
      cp /tmp/database_update $FILTERFILE      
    fi
    UPDATED="Y"
    dialog --timeout 3 --title "pinHP Arcade Classics" --msgbox "\n_database.csv\n\nDone!\n\n" 0 0
  else
    NOCHANGES="Y"  
  fi
  joy2key_stop
fi

rm /tmp/insert_code &> /dev/null

### Final confirmation dialog ###
joy2key_start "anykey"
if [ "$UPDATED" = "Y" ]; then
  dialog --timeout 15 --title "pinHP Arcade Classics" --msgbox "\nGame settings\n\nUpdate finished\n\n" 0 0
elif [ "$NOCHANGES" = "Y" ]; then
  dialog --timeout 15 --title "pinHP Arcade Classics" --msgbox "\nGame settings\n\nNo changes applied\n\n" 0 0
else
  dialog --timeout 15 --title "pinHP Arcade Classics" --msgbox "\nGame settings\n\n*** up to date ***\n\n" 0 0
fi
joy2key_stop
